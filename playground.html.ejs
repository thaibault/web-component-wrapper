<!doctype html>
<%_ /*
    region header
    Copyright Torben Sickert (info["~at~"]torben.website) 16.12.2012

    License
    -------

    This library written by Torben Sickert stand under a creative commons
    naming 3.0 unported license.
    See https://creativecommons.org/licenses/by/3.0/deed.de
    endregion
*/ _%>
<html lang="en">
    <!--region head-->
    <head>
        <meta charset="utf-8">
        <!--Prevent browser caching-->
        <meta http-equiv="cache-control" content="no-cache">
        <meta http-equiv="expires" content="0">
        <meta http-equiv="pragma" content="no-cache">
        <title>playground</title>
        <script src="https://polyfill.io/v3/polyfill.js?features=Array.from%2CArray.prototype.includes%2CArray.prototype.values%2CCustomEvent%2CElement.prototype.after%2CElement.prototype.cloneNode%2CObject.assign%2CObject.entries%2CObject.values%2CPromise%2CString.prototype.endsWith%2CString.prototype.includes%2CString.prototype.startsWith%2CSymbol%2Cfetch"></script>
        <script>
            /*
                Only provide the shadow dom polyfill and avoid to patch a lot
                of dom apis.
            */
            window.ShadyDOM = {noPatch: true}
        </script>
        <script src="/@webcomponents/webcomponentsjs/webcomponents-bundle.js"></script>
    </head>
    <!--endregion-->
    <!--region script-->
    <script>
        window.onload = function() {
            // region prepare web-component
            const Tools = webComponentWrapper.clientnode.Tools
            const Web = webComponentWrapper.index.Web

            Web.content = Tools.maximalSupportedInternetExplorerVersion === 0 ?
                ('<div class="wrapper">' +
                    "Example Properties\${id ? (' for ' + id) : ''}:" +
                    '<ul>' +
                        '${Object.keys(self.properties)' +
                            '.map(function(name) {' +
                                'return (' +
                                    "'<li>' +" +
                                        'name +' +
                                        "': ' +" +
                                        'Tools.represent(self.properties[name]) +' +
                                    "'</li>'" +
                                ')' +
                            '})' +
                            ".join('')" +
                        '}' +
                    '</ul>' +
                    '<slot>Fallback Slot content</slot>' +
                '</div>') :
                Web.content = (
                    '<div class="wrapper">' +
                        '<slot>Fallback Slot content</slot>' +
                    '</div>'
                )
            Web.propertiesToReflectAsAttributes = 'exampleBoolean'
            Web.propertyTypes = {
                exampleBoolean: 'boolean',
                exampleFunction: 'function',
                exampleJson: 'json',
                exampleNumber: 'number',
                exampleObject: 'object',
                exampleString: 'string',
                id: 'string'
            }
            Web.observedAttributes = Object.keys(Web.propertyTypes)
                .map(function(name) {
                    return Tools.stringCamelCaseToDelimited(name)
                })
            Web.shadowDOM =
                Tools.maximalSupportedInternetExplorerVersion === 0 ?
                    {mode: 'closed'} :
                    null

            customElements.define('my-web', Web)
            // endregion

            const one = document.querySelector('#web-1')

            const two = document.querySelector('#web-2')
            two.exampleBoolean = true
        }
    </script>
    <!--endregion-->
    <body>

        <my-web
            id="web-1"
            example-boolean
            example-function="console.log(2)"
            example-json='{"key": false, "key2": null, "key3": {"key": 2}, "key4": "value"}'
            example-number="4"
            example-object="{key: false, key2: null, key3: {key: 2}, key4: 'value'}"
            example-string="value"
        >
            <h1>Slotted Content</h1>
            <p>Lorem ipsum...</p>
        </my-web>

        <hr/>

        <my-web id="web-2">
            <h1>Slotted Content</h1>
            <p>Lorem ipsum...</p>
        </my-web>

    </body>
<html>
<%_ /*
    region vim modline
    vim: set tabstop=4 shiftwidth=4 expandtab:
    vim: foldmethod=marker foldmarker=region,endregion:
    endregion
*/ _%>
